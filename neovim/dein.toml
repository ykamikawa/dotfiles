# plugin maneger
[[plugins]]
repo='Shougo/dein.vim'

[[plugins]]
repo='Shougo/vimproc.vim'
build='make'

[[plugins]]
repo='Shougo/deoplete.nvim'
hook_add='''
let g:deoplete#enable_at_startup = 1
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ deoplete#manual_complete()
function! s:check_back_space() abort "{{{
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction"}}}
" <S-TAB>: completion back. tab+shift
inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
" <BS>: close popup and delete backword char.
inoremap <expr><BS> deoplete#smart_close_popup()."\<C-h>"
" Use auto delimiter
call deoplete#custom#source('_', 'converters', [
      \ 'converter_remove_paren',
      \ 'converter_remove_overlap',
      \ 'converter_truncate_abbr',
      \ 'converter_truncate_menu',
      \ 'converter_auto_delimiter',
      \ ])
'''

#zsh
[[plugins]]
repo='zchee/deoplete-zsh'

# ALE
[[plugins]]
repo='dense-analysis/ale'

# python
[[plugins]]
repo='zchee/deoplete-jedi'
depends='deoplete.nvim'
on_ft='python'

# go
[[plugins]]
repo='fatih/vim-go'
on_ft='go'
[[plugins]]
repo='zchee/deoplete-go'
build='make'
on_ft='go'
depends='deoplete.nvim'

# HTML css3
[[plugins]]
repo='mattn/emmet-vim'
hook_add='''
let g:user_emmet_leader_key='<C-e>'
'''
[[plugins]]
repo='hail2u/vim-css3-syntax'
[[plugins]]
repo='gko/vim-coloresque'

# markdown
[[plugins]]
repo='plasticboy/vim-markdown'

# preview
[[plugins]]
repo='kannokanno/previm'

# browser
[[plugins]]
repo='tyru/open-browser.vim'

# latex
[[plugins]]
repo='lervag/vimtex'

[[plugins]]
repo='thinca/vim-quickrun'

# json
[[plugins]]
repo='elzr/vim-json'

# csv
[[plugins]]
repo='chrisbra/csv.vim'

# NERDTree
[[plugins]]
repo='scrooloose/nerdtree'
hook_add='''
nmap <Leader><Tab> <C-w>w
'''
[[plugins]]
repo='jistr/vim-nerdtree-tabs'
hook_add='''
if argc()==0
  let g:nerdtree_tabs_open_on_console_startup = 1
end
'''

# git
[[plugins]]
repo='lambdalisue/gina.vim'
[[plugins]]
repo='Xuyuanp/nerdtree-git-plugin'
[[plugins]]
repo='airblade/vim-gitgutter'

[[plugins]]
repo='bronson/vim-trailing-whitespace'

[[plugins]]
repo='Yggdroot/indentLine'

[[plugins]]
repo='rhysd/accelerated-jk'
hook_add='''
nmap j <Plug>(accelerated_jk_gj)
nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo='tpope/vim-fugitive'

[[plugins]]
repo='Townk/vim-autoclose'

[[plugins]]
repo='Shougo/context_filetype.vim'

[[plugins]]
repo='osyo-manga/vim-precious'
depends=['context_filetype.vim']

# toml syntax
[[plugins]]
repo='cespare/vim-toml'
on_ft='toml'

[[plugins]]
repo='w0ng/vim-hybrid'
hook_add='''
set background=dark
au MyAutoCmd VimEnter * nested colorscheme hybrid
'''

[[plugins]]
repo='tpope/vim-fugitive'

[[plugins]]
repo='vim-airline/vim-airline'
hook_add='''
" Powerline系フォントを利用する
set laststatus=2
let g:airline_powerline_fonts = 1
" タブバーのカスタマイズを有効にする
let g:airline#extensions#tabline#enabled = 1
" タブバーの右領域を非表示にする
let g:airline#extensions#tabline#show_splits = 1
let g:airline#extensions#tabline#show_tab_type = 1
let g:airline#extensions#tabline#show_close_button = 1
'''
[[plugins]]
repo='vim-airline/vim-airline-themes'
depends='vim-airline'
hook_add='''
set ambiwidth=double
let g:airline_theme='molokai'
'''
